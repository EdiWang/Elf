@page "/"
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims;
@using Microsoft.AspNetCore.Components.Authorization;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;

@attribute [Authorize]
@inject IAccessTokenProvider AccessTokenProvider

<PageTitle>Links</PageTitle>

<FluentToolbar id="toolbar-links" Style="width:100%">
    <FluentButton Appearance="Appearance.Accent">New</FluentButton>
    <FluentButton>Refresh</FluentButton>

    <FluentRadioGroup @bind-Value=searchBy slot="end">

    </FluentRadioGroup>

    <FluentTextField Placeholder="Search"></FluentTextField>
</FluentToolbar>

<FluentDivider Style="width: 100%; margin-top: 10px; margin-bottom: 10px" Orientation=Orientation.Horizontal Role="DividerRole.Separator"></FluentDivider>

<FluentCard>
    <FluentDataGrid Items="@LinkItems" GenerateHeader="GenerateHeaderOption.Sticky"
        GridTemplateColumns="0.2fr 0.8fr 0.4fr 0.2fr 0.2fr 0.15fr 0.1fr 0.3fr 0.1fr 0.3fr">
        <TemplateColumn Title="Token">
            <a href="@Constants.APIAddress/fw/@context.FwToken" target="_blank">@context.FwToken</a>
        </TemplateColumn>
        <TemplateColumn Title="Origin Url">
            <a href="@context.OriginUrl" target="_blank">@context.OriginUrl</a>
        </TemplateColumn>
        <PropertyColumn Property="@(c => c.Note)" Sortable="true" Class="note" />
        <PropertyColumn Property="@(c => c.AkaName)" Title="Aka" Sortable="true" Class="aka" />
        <TemplateColumn Title="Tags">
            @foreach (var tag in context.Tags)
            {
                <FluentBadge Appearance="Appearance.Accent">
                    <span data-tag-id="@tag.Id">@tag.Name</span>
                </FluentBadge>
            }
        </TemplateColumn>
        <TemplateColumn Title="Enabled">
            <FluentCheckbox @bind-Value=context.IsEnabled Readonly=true></FluentCheckbox>
        </TemplateColumn>
        <PropertyColumn Property="@(c => c.TTL)" Sortable="true" Class="ttl" />
        <PropertyColumn Property="@(c => c.UpdateTimeUtc)" Title="Update Time (UTC)" Sortable="true"
            Class="update-time-utc" />
        <PropertyColumn Property="@(c => c.Hits)" Sortable="true" Class="hits" />

        <TemplateColumn Title="Actions" Align="@Align.End">
            <FluentButton IconEnd="@(new Icons.Regular.Size16.Copy())"
                OnClick="@(() => Copy(context.FwToken))" />

            <FluentButton IconEnd="@(new Icons.Regular.Size16.Share())"
                OnClick="@(() => Console.WriteLine(context.Id))" />

            <FluentButton IconEnd="@(new Icons.Regular.Size16.Edit())"
                OnClick="@(() => Console.WriteLine(context.Id))" />

            <FluentButton IconEnd="@(new Icons.Regular.Size16.Delete())"
                OnClick="@(() => Console.WriteLine(context.Id))" />
        </TemplateColumn>
    </FluentDataGrid>

    <FluentPaginator State="@Pagination" CurrentPageIndexChanged="CurrentPageIndexChanged" />
</FluentCard>