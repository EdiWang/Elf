@page "/"
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims;
@using Microsoft.AspNetCore.Components.Authorization;
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication;

@attribute [Authorize]
@inject IAccessTokenProvider AccessTokenProvider

<PageTitle>Links</PageTitle>

<FluentToolbar id="toolbar-links" Style="width:100%">
    <FluentButton Appearance="Appearance.Accent">New</FluentButton>
    <FluentButton>Refresh</FluentButton>

    <FluentRadioGroup @bind-Value=searchBy slot="end">

    </FluentRadioGroup>

    <FluentTextField Placeholder="Search"></FluentTextField>
</FluentToolbar>

<FluentCard>
    <FluentDataGrid Items="@LinkItems" GenerateHeader="GenerateHeaderOption.Sticky">
        <PropertyColumn Property="@(c => c.FwToken)" Sortable="false" Class="token" />
        <PropertyColumn Property="@(c => c.OriginUrl)" Sortable="true" Class="origin-url" />
        <PropertyColumn Property="@(c => c.Note)" Sortable="true" Class="note" />
        <PropertyColumn Property="@(c => c.AkaName)" Sortable="true" Class="aka" />
        <PropertyColumn Property="@(c => c.Tags)" Sortable="false" Class="tags" />
        <PropertyColumn Property="@(c => c.IsEnabled)" Sortable="true" Class="enabled" />
        <PropertyColumn Property="@(c => c.TTL)" Sortable="true" Class="ttl" />
        <PropertyColumn Property="@(c => c.UpdateTimeUtc)" Sortable="true" Class="update-time-utc" />
        <PropertyColumn Property="@(c => c.Hits)" Sortable="true" Class="hits" />

        <TemplateColumn Title="Actions" Align="@Align.End">
            <FluentButton IconEnd="@(new Icons.Regular.Size16.Copy())"
                OnClick="@(() => Console.WriteLine(context.Id))" />

            <FluentButton IconEnd="@(new Icons.Regular.Size16.Share())"
                OnClick="@(() => Console.WriteLine(context.Id))" />

            <FluentButton IconEnd="@(new Icons.Regular.Size16.Edit())"
                OnClick="@(() => Console.WriteLine(context.Id))" />

            <FluentButton IconEnd="@(new Icons.Regular.Size16.Delete())"
                OnClick="@(() => Console.WriteLine(context.Id))" />
        </TemplateColumn>
    </FluentDataGrid>

    <FluentPaginator State="@Pagination" CurrentPageIndexChanged="CurrentPageIndexChanged" />
</FluentCard>