@page "/Report"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.FluentUI.AspNetCore.Components.Icons.Regular

@attribute [Authorize]

<style>
    .chart-container {
        height: 300px;
        align-items: center;
        flex-direction: column;
    }
</style>

<PageTitle>Report</PageTitle>

<FluentToolbar id="toolbar-report" Style="width:100%;margin-bottom:10px;">
    <FluentDatePicker AriaLabel="StartDate" Label="Start Date" @bind-Value="@StartDateLocal" Required />
    <FluentDatePicker AriaLabel="EndDate" Label="End Date" @bind-Value="@EndDateLocal" Required />

    <FluentButton IconStart="@(new Size20.ArrowSync())" Loading="IsChartBusy" OnClick="GetReport">
        Refresh Chart
    </FluentButton>
</FluentToolbar>

<FluentStack Orientation="Orientation.Vertical">
    <div class="row g-2" style="width:100%;">
        <div class="col-md-4">
            <FluentCard>
                <h4>Requests</h4>

                @{
                    var dateLabels = LinkTrackingDateCount.Select(p => p.TrackingDateUtc.ToString("MM/dd")).ToArray();
                }

                <div class="chart-container d-flex">
                    <Chart Id="line-link-tracking-date" Type="@Chart.ChartType.Line"
                        Data="LinkTrackingDateCount.Select(p => p.RequestCount.ToString()).ToArray()"
                        Labels="dateLabels" DataSetLabel="Number of requests" LegendDisplay="false" AspectRatio="2">
                    </Chart>
                </div>
            </FluentCard>
        </div>
        <div class="col-md-4">
            <FluentCard>
                <h4>Client types</h4>

                <div class="chart-container d-flex">
                    <Chart Id="pie-client-types" Type="@Chart.ChartType.Pie"
                        Data="ClientTypeCount.Select(p => p.Count.ToString()).ToArray()"
                        Labels="ClientTypeCount.Select(p => p.ClientTypeName).ToArray()" LegendPosition="right"
                        AspectRatio="2">
                    </Chart>
                </div>
            </FluentCard>
        </div>
        <div class="col-md-4">
            <FluentCard>
                <h4>Most requested links</h4>

                <div class="chart-container d-flex">
                    <Chart Id="doughnut-most-requested-link-count" Type="@Chart.ChartType.Doughnut"
                        Data="MostRequestedLinkCount.Select(p => p.RequestCount.ToString()).ToArray()"
                        Labels="MostRequestedLinkCount.Select(p => p.Note).ToArray()" LegendPosition="right"
                        AspectRatio="2">
                    </Chart>
                </div>
            </FluentCard>
        </div>
    </div>

    <FluentCard>
        <FluentStack>
            <h4>Recent Requests</h4>
            <FluentSpacer />

            <div>
                <FluentButton Appearance="Appearance.Accent" IconStart="@(new Size20.ArrowSync())"
                    OnClick="Refresh" Loading="IsBusy">Refresh</FluentButton>
                <FluentButton IconStart="@(new Size20.Delete())" Loading="IsBusy" OnClick="Clear">
                    Clear
                </FluentButton>
            </div>
        </FluentStack>

        <FluentDataGrid Items="@RequestTrackItems" GenerateHeader="GenerateHeaderOption.Sticky"
            GridTemplateColumns="0.2fr 0.4fr 0.4fr 0.25fr 0.2fr 0.15fr 0.2fr 0.3fr 0.3fr 0.3fr">

            <TemplateColumn Title="Token">
                <a href="@Constants.APIAddress/fw/@context.FwToken" target="_blank">@context.FwToken</a>
            </TemplateColumn>

            <PropertyColumn Property="@(c => c.Note)" Sortable="true" Class="note" />
            <PropertyColumn Property="@(c => c.UserAgent)" Sortable="true" Title="User Agent" Class="user-agent" />
            <PropertyColumn Property="@(c => c.IpAddress)" Sortable="true" Title="Ip Address" Class="ip-address" />
            <PropertyColumn Property="@(c => c.IPCountry)" Sortable="true" Title="Country" Class="country" />
            <PropertyColumn Property="@(c => c.IPRegion)" Sortable="true" Title="Region" Class="region" />
            <PropertyColumn Property="@(c => c.IPCity)" Sortable="true" Title="City" Class="city" />
            <PropertyColumn Property="@(c => c.IPASN)" Sortable="true" Title="ASN" Class="asn" />
            <PropertyColumn Property="@(c => c.IPOrg)" Sortable="true" Title="Organization" Class="org" />
            <PropertyColumn Property="@(c => c.RequestTimeUtc)" Sortable="true" Title="Request Time (UTC)"
                Class="request-time-utc" />
        </FluentDataGrid>

        <FluentPaginator State="@Pagination" CurrentPageIndexChanged="CurrentPageIndexChanged" />
    </FluentCard>

</FluentStack>