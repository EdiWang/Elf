@inject IJSRuntime JSRuntime

<canvas id="@Id"></canvas>

@code {
    public enum ChartType
    {
        Line,
        Pie,
        Doughnut
    }

    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public ChartType Type { get; set; }

    [Parameter]
    public string[] Data { get; set; }

    [Parameter]
    public string[] Labels { get; set; }

    [Parameter]
    public string DataSetLabel { get; set; }

    [Parameter]
    public string LegendPosition { get; set; } = "top";

    [Parameter]
    public bool LegendDisplay { get; set; } = true;

    [Parameter]
    public int AspectRatio { get; set; } = 1;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (Data.Any() && Labels.Any())
        {
            var config = new
            {
                Type = Type.ToString().ToLower(),
                Options = new
                {
                    Responsive = true,
                    AspectRatio = AspectRatio,
                    Plugins = new
                    {
                        Legend = new
                        {
                            Display = LegendDisplay,
                            Position = LegendPosition,
                            Align = "middle"
                        }
                    }
                },
                Data = new
                {
                    Datasets = new[] { new { Label = DataSetLabel, Data = Data } },
                    Labels = Labels
                }
            };

            await JSRuntime.InvokeVoidAsync("setupChart", Id, config);
        }
    }
}
