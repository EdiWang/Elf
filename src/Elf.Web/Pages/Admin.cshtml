@page "/admin"
@model Elf.Web.Models.LinkEditModel

@{
    var showLinkUrlPrefix = $"{HttpContext.Request.Scheme}://{HttpContext.Request.Host}/fw/";
}

@section scripts{
    <script src="~/js/jquery.qrcode.min.js"></script>
    <script>
        var shareLinkCanvas = new bootstrap.Offcanvas(document.getElementById('shareLinkCanvas'));
        var editLinkCanvas = new bootstrap.Offcanvas(document.getElementById('editLinkCanvas'));
        var linkId = 0;

        var table = $(".table-links").DataTable({
                "order": [[4, "desc"]],
                "pageLength": 15,
                "lengthMenu": [10, 15, 20, 30, 50, 100],
                "processing": true,
                "serverSide": true,
                "ordering": false,
                "ajax":
                {
                    url: "/api/link/list",
                    type: "POST"
                },
                "initComplete": function(settings, json) {
                    $('.dataTables_filter input').unbind();
                    $('.dataTables_filter input').bind('keyup blur', function (e) {
                        console.info(e);
                        if(e.keyCode == 13 || e.type == 'blur') {
                            table.search( this.value ).draw();
                        }
                    });
                },
                "columns": [
                    { "data": "fwToken" },
                    { "data": "originUrl" },
                    { "data": "note" },
                    { "data": "akaName" },
                    { "data": "isEnabled" },
                    { "data": "ttl" },
                    { "data": "updateTimeUtc" },
                    { "data": null }
                ],
                "columnDefs": [
                    {
                        "targets": -1,
                        "render": function (data, type, row, meta) {
                            return `<a href="javascript:;" onclick="showLink('${data.fwToken
                                }')" class="btn btn-sm btn-outline-success">Share</a> <a href="javascript:;" onclick="editLink('${data.id
                                }')" class="btn btn-sm btn-outline-primary">Edit</a> <button class="btn btn-sm btn-outline-danger btn-delete">Delete</button>`;
                        }
                    },
                    {
                        "targets": 0,
                        "data": "fwToken",
                        "render": function (data, type, row, meta) {
                            return `<a href="/fw/${data}" class="badge bg-secondary" target="_blank">${data}</a>`;
                        }
                    },
                    {
                        "targets": 1,
                        "data": "originUrl",
                        "render": function (data, type, row, meta) {
                            return `<span class="d-flex"><a href="${data}" class="col-link" target="_blank">${data}</a><a class="d-inline-block btn btn-sm btn-outline-secondary btn-copy-url" href="javascript:copyUrl('${data}');">Copy</a></span>`;
                        }
                    },
                    {
                        "targets": 3,
                        "data": "akaName",
                        "render": function (data, type, row, meta) {
                            if (data) {
                                return `<a href="/aka/${data}" class="col-aka badge badge-pill bg-info" target="_blank">${data}</a>`;
                            } else {
                                return ``;
                            }
                        }
                    },
                    {
                        "targets": 4,
                        "data": "isEnabled",
                        "render": function (data, type, row, meta) {
                            return data ? '✔' : '❌';
                        }
                    },
                    {
                        "targets": 6,
                        "data": "updateTimeUtc",
                        "render": function (data, type, row, meta) {
                            return `<span class="text-muted">${(new Date(data)).toLocaleString()}</span>`;
                        }
                    }]
            });

        $(".btn-refresh").click(function () {
            table.ajax.reload();
            elfToast.success("Data Refreshed");
        });

        $('.table-links tbody').on('click', 'button', function () {
            var data = table.row($(this).parents('tr')).data();
            console.info(data);
            var cfm = confirm("Delete Confirmation?");
            if (cfm) {
                deleteLink(data.id);
                $(this).parents('tr').hide();
            }
        });

        function showLink(token) {
            var url = `@showLinkUrlPrefix${token}`;
            $(".qrcode").empty();
            $(".qrcode").qrcode(url);
            $("#input-link-url").val(url);
            shareLinkCanvas.show();
        }

        function editLink(id) {
            callApi(`/api/link/${id}`, 'GET', {},
                async (resp) => {
                    var data = await resp.json();
                    linkId = data.id;
                    $("#OriginUrl").val(data.originUrl);
                    $("#Note").val(data.note);
                    $("#AkaName").val(data.akaName);
                    $("#TTL").val(data.ttl);
                    $("#check-is-enabled").attr('checked', data.isEnabled);
                    editLinkCanvas.show();
                });
        }

        function deleteLink(linkId) {
            callApi(`/api/link/${linkId}`, 'DELETE', {},
                (resp) => {
                    elfToast.success("Link deleted.");
                });
        }

        $(".btn-copy").click(function () {
            $("#input-link-url").select();
            document.execCommand('copy');
        });

        $(".btn-create-link").click(function () {
            $("#edit-form")[0].reset();
            linkId = 0;
            $("#TTL").val(3600);
            editLinkCanvas.show();
        });

        $(".btn-submit").click(function() {
            if ($("#edit-form").valid()) {
                var apiAddress = '';
                var verb = '';

                if (linkId == 0) {
                    apiAddress = '/api/link/create';
                    verb = 'POST';
                }
                else {
                    apiAddress = `/api/link/${linkId}`;
                    verb = 'PUT';
                }

                callApi(apiAddress, verb,
                    {
                        "OriginUrl": $("#OriginUrl").val(),
                        "Note": $("#Note").val(),
                        "AkaName": $("#AkaName").val(),
                        "TTL": $("#TTL").val(),
                        "IsEnabled": $("#check-is-enabled").is(":checked")
                    },
                    async (resp) => {
                        var data = await resp.json();

                        $("#edit-form")[0].reset();
                        $("#editLinkModal").modal('hide');
                        elfToast.success(`Operation succeed, link token: ${data}`);
                        showLink(data);

                        table.ajax.reload();
                        elfToast.success("Data Refreshed");
                    });

                editLinkCanvas.hide();
            }
        });
    </script>
}

@Html.AntiForgeryToken()

<div class="float-end">
    <button class="btn btn-sm btn-success btn-create-link">
        + New
    </button>
    <button class="btn btn-sm btn-outline-success btn-refresh">
        Refresh
    </button>
</div>

<table class="table table-bordered table-sm table-hover table-links">
    <thead class="bg-light">
        <tr>
            <th style="width: 80px;">Token</th>
            <th>Origin Url</th>
            <th>Note</th>
            <th style="width: 80px;">Aka</th>
            <th style="width: 80px;">Enabled</th>
            <th style="width: 80px;">TTL</th>
            <th style="width: 180px;">Update Time</th>
            <th style="width: 180px;">Action</th>
        </tr>
    </thead>
</table>

<div class="offcanvas offcanvas-end" tabindex="-1" id="editLinkCanvas" aria-labelledby="editLinkCanvasLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="editLinkCanvasLabel">Link Information</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <form id="edit-form" novalidate="novalidate">
            <input type="hidden" id="input-id" name="input-id" value="0">
            <div class="mb-3">
                <label asp-for="OriginUrl" class="form-label"></label>
                <textarea asp-for="OriginUrl" class="form-control"></textarea>
                <span asp-validation-for="OriginUrl" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="Note" class="form-label"></label>
                <input asp-for="Note" class="form-control" />
                <span asp-validation-for="Note" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="AkaName" class="form-label"></label>
                <input asp-for="AkaName" class="form-control" />
                <span asp-validation-for="AkaName" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label asp-for="TTL" class="form-label"></label>
                <input asp-for="TTL" class="form-control" />
                <span asp-validation-for="TTL" class="text-danger"></span>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="checkbox" checked="checked" id="check-is-enabled" name="check-is-enabled" value="true" />
                <label class="form-check-label" for="check-is-enabled">Enable</label>
            </div>
            <hr />
            <button type="button" class="btn btn-outline-success btn-submit">Submit</button>
        </form>
    </div>
</div>

<div class="offcanvas offcanvas-end" tabindex="-1" id="shareLinkCanvas" aria-labelledby="shareLinkCanvasLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="editTagCanvasLabel">Share Your Link</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <section class="qrcode mt-3 text-center align-content-center"></section>
        <div class="text-center">
            <div class="mb-2">
                <input type="text" id="input-link-url" class="form-control form-control-sm form-control-plaintext text-center" />
            </div>
            <button class="btn btn-sm btn-outline-success btn-copy">Copy link</button>
        </div>
    </div>
</div>